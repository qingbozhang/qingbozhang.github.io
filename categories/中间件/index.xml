<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>中间件 on bobo的窝</title>
    <link>https://qingbozhang.github.io/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/</link>
    <description>Recent content in 中间件 on bobo的窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 01 Jan 2021 15:00:00 +0800</lastBuildDate><atom:link href="https://qingbozhang.github.io/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mybatis 整体架构</title>
      <link>https://qingbozhang.github.io/post/mybatis/</link>
      <pubDate>Fri, 01 Jan 2021 15:00:00 +0800</pubDate>
      
      <guid>https://qingbozhang.github.io/post/mybatis/</guid>
      <description>架构 MyBatis 的整体架构分为三层： 基础支持层 核心处理层 接口层 模块 主要模块列表 模块 包 说明 反射模块 reflection &amp;ndash; 类型模块 type 配置文件别名、JDBC &amp;lt;-转换-&amp;</description>
    </item>
    
    <item>
      <title>rocketMQ 消息发送</title>
      <link>https://qingbozhang.github.io/post/rocketmq/3/</link>
      <pubDate>Fri, 01 Jan 2021 15:00:00 +0800</pubDate>
      
      <guid>https://qingbozhang.github.io/post/rocketmq/3/</guid>
      <description>消息发送 消息 Message的基础属性主要包括消息所属主题topic、消息Flag（RocketMQ不做处理）、扩展属性、消息体。 Messag</description>
    </item>
    
    <item>
      <title>sentinel 概览</title>
      <link>https://qingbozhang.github.io/post/sentinel/1/</link>
      <pubDate>Fri, 01 Jan 2021 15:00:00 +0800</pubDate>
      
      <guid>https://qingbozhang.github.io/post/sentinel/1/</guid>
      <description>项目结构 sentinel-core 核心模块，限流、降级、系统保护等都在这里实现 sentinel-dashboard 控制台模块，可以对连接上的sentinel客户端实现可视化的管理 sentinel-transport 传输模块，提供了基</description>
    </item>
    
    <item>
      <title>grpc-java - 1</title>
      <link>https://qingbozhang.github.io/post/grpc-java/</link>
      <pubDate>Tue, 01 Dec 2020 15:00:00 +0800</pubDate>
      
      <guid>https://qingbozhang.github.io/post/grpc-java/</guid>
      <description>客户端调用 客户端调用模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public class ClientMain { @Getter public static class HelloClient { private HelloGrpc.HelloStub asyncStub; private HelloGrpc.HelloBlockingStub blockingStub; private HelloGrpc.HelloFutureStub futureStub; public HelloClient(ManagedChannel channel) { this.channel = channel; asyncStub = HelloGrpc.newStub(channel); blockingStub = HelloGrpc.newBlockingStub(channel);</description>
    </item>
    
  </channel>
</rss>
